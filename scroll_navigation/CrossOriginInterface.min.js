class CrossOriginInterface{static instances={};constructor(e){if(CrossOriginInterface.instances[e])return console.error("CrossOriginInterface instance already exists with key",e),CrossOriginInterface.instances[e];CrossOriginInterface.instances[e]=this,this.sortedAnchors=[],this.trackedAnchors=new Set,this.anchorVisibleStates={},this.activeAnchorId=null,this.component=null,this.key=e,window.addEventListener("message",this.handleMessage.bind(this))}scroll(e){const t=document.getElementById(e);t&&t.scrollIntoView({behavior:"smooth",block:"start"}),this.emphasize(e)}emphasize(e){const t=document.getElementById(e);t&&(t.style.transition="transform 0.4s ease-in-out",t.style.transform="scale(1.04)",setTimeout((()=>{t.style.transform="scale(1)"}),600))}updateActiveAnchor(e){this.trackedAnchors.has(e)?this.activeAnchorId=e:console.error("Anchor is not being tracked",e??"null")}checkBestAnchor(){if(this.activeAnchorId){if(this.anchorVisibleStates[this.activeAnchorId])return;let e=null;const t=this.sortedAnchors.indexOf(this.activeAnchorId);for(let s=t+1;s<this.sortedAnchors.length;s++){const t=this.sortedAnchors[s];if(this.anchorVisibleStates[t]){e=t;break}}if(null===e)for(let s=t-1;s>=0;s--){const t=this.sortedAnchors[s];if(this.anchorVisibleStates[t]){e=t;break}}null!==e&&(this.activeAnchorId=e,this.postMessage("updateActiveAnchor",this.activeAnchorId),this.activeAnchorId)}}postMessage(e,t){null!==this.component?this.component.postMessage({COMPONENT_method:e,key:this.key,anchor_id:t},"*"):console.error("Component has not been registered")}observer=new IntersectionObserver((e=>{e.forEach((e=>{const t=e.target.id;e.isIntersecting?this.anchorVisibleStates[t]=!0:(this.anchorVisibleStates[t]=!1,this.activeAnchorId===t&&this.checkBestAnchor())}))}),{threshold:[0,1]});trackAnchors(e){for(const t of e){if(this.trackedAnchors.has(t))return;const e=document.getElementById(t);if(!e)return void console.error("Anchor does not exist",t);this.trackedAnchors.add(t);let s=!1;for(let r=0;r<this.sortedAnchors.length;r++){const n=document.getElementById(this.sortedAnchors[r]);if(e.compareDocumentPosition(n)&Node.DOCUMENT_POSITION_FOLLOWING){this.sortedAnchors.splice(r,0,t),s=!0;break}}s||this.sortedAnchors.push(t),this.sortedAnchors.push(t),this.observer.observe(e)}}handleMessage(e){const{COI_method:t,key:s}=e.data;if(t&&(this.key,e.data,s===this.key))switch(e.data,null===this.component&&("register"===t?this.component=e.source:console.error("Must register component with this CrossOriginInterface before calling other methods")),t){case"scroll":const{anchor_id:s}=e.data;this.scroll(s);break;case"register":console.error("Register can only be called once.");break;case"trackAnchors":const{anchor_ids:r}=e.data;this.trackAnchors(r);break;case"updateActiveAnchor":const{anchor_id:n}=e.data;this.updateActiveAnchor(n);break;default:console.error("Unknown method",t)}}}function instantiateCrossOriginInterface(e){return new CrossOriginInterface(e)}